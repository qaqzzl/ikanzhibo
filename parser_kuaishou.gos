package main

import (
	"ikanzhibo/db"
	"regexp"
	"strconv"
	"time"
)

//huya解析方法
func (spider *Spider) kuaiShouParser(p *Parser)  {
	switch p.Queue.Type {
	case "live_info":
		spider.kuaiShouLiveInfo(p)
	case "live_list":
		spider.kuaiShouLiveList(p)
	}
}

//直播间解析方法
func (spider *Spider) kuaiShouLiveInfo(p *Parser) {
	Live := db.TableLive{}
	res_regexp := regexp.MustCompile(`User:[0-9a-zA-Z]+":(\{[\s\S]+\}),"\$User:[0-9a-zA-Z]+.verifiedStatus":`);
	res_regexps := res_regexp.FindSubmatch(p.Body)
	if res_regexps[1] != nil {
		//code ...
	} else {
		return
	}

	//.Live_is_online - 判断是在播 . 如果不再播 . 使用新策略爬去基本数据
	if Live.Live_is_online != "" {
		Live_is_online_no(data,ParserUniqueDetail)
		return
	} else {
		Live.Live_is_online = "yes"
	}


	//.Live_uri #
	Live.Live_uri = LiveReplaceSql(UrlGetUri(data.Url))

	//.Live_platform #

	//.Live_title #

	//.Live_anchortv_name #

	//.Live_anchortv_photo #

	//.Live_cover #

	//.Live_play #

	//.Live_class #


	//.Live_online_user #


	//.Live_follow #

	//.Live_tag

	//.Live_introduction

	//.live_anchortv_sex #


	//.Live_type_id

	//.Live_type_name


	Live.Created_at = strconv.FormatInt(time.Now().Unix(),10)
	Live.Updated_at = strconv.FormatInt(time.Now().Unix(),10)
	Live.Live_pull_url= p.Queue.Uri

	spider.ChanWriteInfo <- &WriteInfo{
		TableLive:Live,
		Queue: p.Queue,
	}
	return
}

//直播发现
func (spider *Spider) kuaiShouLiveList(p *Parser) {
	//分类直播列表页
	regexps := regexp.MustCompile(`<a href="(/cate/[/0-9a-zA-Z]+)" class="category-card-preview"`)
	t := regexps.FindAllSubmatch(p.Body, -1)
	for i:=0; i<len(t); i++ {
		spider.ChanProduceList <- &db.Queue{
			Platform: p.Queue.Platform,
			Uri:      "https://live.kuaishou.com"+string(t[i][1]),
			Type:     "live_list",
		}
	}

	//直播info详情
	regexps = regexp.MustCompile(`<a href="(/u/[0-9a-zA-Z]+)" class="preview-video"`)
	t = regexps.FindAllSubmatch(p.Body, -1)
	for i:=0; i<len(t); i++ {
		spider.ChanProduceList <- &db.Queue{
			Platform: p.Queue.Platform,
			Uri:      "https://live.kuaishou.com"+string(t[i][1]),
			Type:     "live_info",
		}
	}

	//下一页
	var page int
	regexps = regexp.MustCompile(`<li class="pl-pagination-list-item" data-v-[a-zA-Z0-9]+>[\s\n]+([0-9]+)[\s\n]+</li>`)
	t = regexps.FindAllSubmatch(p.Body, -1)

	regexps = regexp.MustCompile(`(/cate/[/0-9a-zA-Z]+)`)
	uri := regexps.FindSubmatch([]byte(p.Queue.Uri))
	for i:=0; i<len(t); i++ {
		page, _ = strconv.Atoi(string(t[i][1]))
	}
	if page != 0 {
		for i:=1; i<page+1; i++ {
			spider.ChanProduceList <- &db.Queue{
				Platform: p.Queue.Platform,
				Uri:      "https://live.kuaishou.com"+string(uri[1])+"/?page="+string(i),
				Type:     "live_list",
			}
		}
	}

}